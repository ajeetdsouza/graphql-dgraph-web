(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{BXRP:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return i})),n.d(t,"default",(function(){return l}));var a=n("zLVn"),r=(n("q1tI"),n("7ljp")),o=n("Bl7J"),i={},p={_frontmatter:i},s=o.a;function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(r.b)(s,Object.assign({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",null,n.pageContext.frontmatter.title),Object(r.b)("p",null,"How to use the GraphQL API. "),Object(r.b)("p",null,"Dgraph serves ",Object(r.b)("a",Object.assign({parentName:"p"},{href:"https://graphql.github.io/graphql-spec/June2018/"}),"spec compliant\nGraphQL")," over HTTP. By\ndefault, GraphQL is served at ",Object(r.b)("inlineCode",{parentName:"p"},"http://localhost:8080/graphql"),". Both GET and POST\nrequests are served."),Object(r.b)("p",null,'For POST requests, the body must be "application/json" encoded with the following form.'),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{className:"language-json"}),'{\n  "query": "...",\n  "operationName": "...",\n  "variables": { "var": "val", ... }\n}\n')),Object(r.b)("p",null,"For GET requests, the query, variables and operation are sent as query parameters in the url."),Object(r.b)("pre",null,Object(r.b)("code",Object.assign({parentName:"pre"},{}),"http://localhost:8080/graphql?query={...}&variables={...}&operation=...\n")),Object(r.b)("p",null,"In both cases, only ",Object(r.b)("inlineCode",{parentName:"p"},"query")," is required. ",Object(r.b)("inlineCode",{parentName:"p"},"variables")," is only required if the query contains GraphQL variables: i.e. it starts like ",Object(r.b)("inlineCode",{parentName:"p"},"query myQuery($var: String...)"),". While, ",Object(r.b)("inlineCode",{parentName:"p"},"operationName")," is required if there are multiple operations in the query; in which case, operations must also be named."),Object(r.b)("p",null,"Compressed requests and responses are available with gzip. Set header ",Object(r.b)("inlineCode",{parentName:"p"},"Content-Encoding")," to ",Object(r.b)("inlineCode",{parentName:"p"},"gzip")," to post encoded data, and ",Object(r.b)("inlineCode",{parentName:"p"},"Accept-Encoding")," to ",Object(r.b)("inlineCode",{parentName:"p"},"gzip")," to receive a compressed response."),Object(r.b)("p",null,"When an operation contains multiple queries, they are run concurrently and independently in a single Dgraph transaction."),Object(r.b)("p",null,"When an operation contains multiple mutations, they are run serially, in the order listed in the request, and in a transaction per mutation. If a mutation fails, the following mutations are not executed, and previous mutations are not rolled back."))}l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-api-mdx-1fdaf448b7b6c81750a5.js.map